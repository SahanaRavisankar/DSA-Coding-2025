// approach 1
class Solution {
    public int minimumDeletions(String s, int k) {
        int n = s.length();
        int res = Integer.MAX_VALUE;
        int[] freq = new int[26];

        for(char ch : s.toCharArray()) {
            freq[ch - 'a']++;
        }

        Set<Character> set = new HashSet<>();

        for(int i = 0; i < n; i++) {
            if(set.contains(s.charAt(i)))
                continue;

            char ch_i = s.charAt(i);
            int freq_i = freq[ch_i - 'a'];
            int temp = 0;
            Set<Character> check = new HashSet<>();

            for(int j = 0; j < n; j++){
                if(i == j || check.contains(s.charAt(j)))
                    continue;

                char ch_j = s.charAt(j);
                if(freq[ch_j - 'a'] - freq_i > k) {
                    temp += Math.abs(freq[ch_j - 'a'] - freq_i) - k;
                } else if(freq[ch_j - 'a'] < freq_i) {
                    temp += freq[ch_j - 'a'];
                }

                check.add(ch_j);
            }

            res = Math.min(res, temp);
            set.add(ch_i);
        }

        return res;
    }
}


// approach 2
class Solution {
    public int minimumDeletions(String s, int k) {
        int n = s.length();
        int res = Integer.MAX_VALUE;
        int[] freq = new int[26];

        for(char ch : s.toCharArray()) {
            freq[ch - 'a']++;
        }

        for(int i = 0; i < 26; i++) {
            int temp = 0;
            
            for(int j = 0; j < 26; j++){
                if(i == j)
                    continue;
                int freq_i = freq[i];
                int freq_j = freq[j];
                if(freq_j - freq_i > k) {
                    temp += freq_j - freq_i - k;
                } else if(freq_j < freq_i) {
                    temp += freq_j;
                }
            }

            res = Math.min(res, temp);
        }

        return res;
    }
}


// approach 3
class Solution {
    public int minimumDeletions(String s, int k) {
        int n = s.length();
        int res = Integer.MAX_VALUE;
        int cumdel = 0;
        int[] freq = new int[26];

        for(char ch : s.toCharArray()) {
            freq[ch - 'a']++;
        }
        Arrays.sort(freq);

        for(int i = 0; i < 26; i++) {
            int freqi = freq[i];
            int del = cumdel;
            
            for(int j = 25; j > i; j--){
                if(freq[j] - freqi <= k)
                    break;
                del += freq[j] - freqi - k;
            }

            res = Math.min(res, del);
            cumdel += freqi;
        }

        return res;
    }
}
