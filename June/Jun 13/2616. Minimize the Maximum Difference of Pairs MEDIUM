class Solution {
    public int minimizeMax(int[] nums, int p) {
        Arrays.sort(nums);
        int n = nums.length;
        int l = 0;
        int r = nums[n - 1] - nums[0];
        int res = 0;

        while(l <= r){
            int mid = l + (r - l) / 2;
            int count = countPairs(mid, nums, p, n);

            if(count >= p){
                res = mid;
                r = mid - 1;
            } else {
                l = mid + 1;
            }
        }

        return res;
    }

    int countPairs(int mid, int[] nums, int p, int n) {
        int i = 0;
        int count = 0;

        while(i + 1 < n){
            if(nums[i + 1] - nums[i] <= mid){
                count++;
                i += 2;
            } else {
                i++;
            }
        }

        return count;
    }
}
