/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
    public TreeNode addOneRow(TreeNode root, int val, int depth) {
        if (depth == 1) {
            TreeNode res = new TreeNode(val);
            res.left = root;
            return res;
        }

        solve(root, val, depth, 1);

        return root;
    }

    void solve(TreeNode root, int val, int depth, int curr) {
        if(root == null)
            return;
        
        if(curr == depth - 1) {
            TreeNode leftTemp = root.left;
            root.left = new TreeNode(val);
            root.left.left = leftTemp;
        
            TreeNode rightTemp = root.right;
            root.right = new TreeNode(val);
            root.right.right = rightTemp;

            return;
        }

        solve(root.left, val, depth, curr + 1);
        solve(root.right, val, depth, curr + 1);
    }
}
