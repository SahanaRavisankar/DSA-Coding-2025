class Solution {
    static final int mod = 1000000007;
    public int countGoodArrays(int n, int m, int k) {
        long[] fact = new long[n + 1];
        fact[0] = 1;
        fact[1] = 1;
        for(int i = 2; i <= n; i++){
            fact[i] = fact[i - 1] * i % mod;
        }

        long[] fermat = new long[n + 1];
        for(int i = 0; i <= n; i++){
            fermat[i] = findpow(fact[i], mod - 2);
        }

        long res = ncr(n - 1, k, fact, fermat) % mod * m % mod;
        long mul = findpow(m - 1, n - k - 1) % mod;
        res = res * mul % mod;
        return (int) res;
    }

    long ncr(int n, int r, long[] fact, long[] fermat){
        return fact[n] * fermat[n - r] % mod * fermat[r] % mod;
    }

    long findpow(long a, long b){
        long res = 1;
        while(b > 0){
            if((b & 1) == 1){
                res = (res * a) % mod;
            }
            a = (a * a) % mod;
            b >>= 1;
        }
        return res;
    }
}
