class Solution {
    int[][] direc = {{1, 0}, {-1, 0}, {0, -1}, {0, 1}};
    public boolean exist(char[][] board, String word) {
        int m = board.length;
        int n = board[0].length;

        for (int i = 0; i < m; i++) {
            for (int j = 0; j < n; j++) {
                if (board[i][j] == word.charAt(0) && find(i, j, board, word, 0, m, n)) {
                    return true;
                }
            }
        }

        return false;
    }

    boolean find(int i, int j, char[][] board, String word, int idx, int m, int n) {
        if (idx == word.length())
            return true;

        if (i < 0 || j < 0 || i >= m || j >= n || board[i][j] == '#' || board[i][j] != word.charAt(idx)) {
            return false;
        }

        char temp = board[i][j];
        board[i][j] = '#';

        for (int[] dir : direc) {
            int i_ = i + dir[0];
            int j_ = j + dir[1];
            if (find(i_, j_, board, word, idx + 1, m, n))
                return true;
        }

        board[i][j] = temp;
        return false;
    }
}
