class Solution {
    
    public int detectCycle(int vertices, ArrayList<ArrayList<Integer>> adj) {
        int[] parent = new int[vertices];
        for(int i = 0; i < vertices; i++)
            parent[i] = i;
            
        for(int u = 0; u < vertices; u++) {
            for(int v : adj.get(u)) {
                if(u < v) {
                    int parentu = find(parent, u);
                    int parentv = find(parent, v);
                    if(parentu == parentv)
                        return 1;
                    union(parent, parentu, parentv);
                }
            }
        }
        
        return 0;
    }
    
    static int find(int[] parent, int x) {
        if(parent[x] == x)
            return x;
        return find(parent, parent[x]);
    }
    
    static void union(int[] parent, int parentu, int parentv) {
        parent[parentu] = parentv;
    }
}
