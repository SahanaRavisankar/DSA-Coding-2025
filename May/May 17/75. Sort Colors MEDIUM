// approach 1
class Solution {
    public void sortColors(int[] nums) {
        int zero = 0, one = 0, two = 0;
        for(int i : nums) {
            if(i == 0)
                zero++;
            else if(i == 1)
                one++;
            else
                two++;
        }

        for(int i = 0; i < nums.length; i++) {
            if(zero != 0) {
                nums[i] = 0;
                zero--;
            } else if(one != 0) {
                nums[i] = 1;
                one--;
            } else {
                nums[i] = 2;
                two--;
            }
        }
    }
}


// approach 2
class Solution {
    public void sortColors(int[] nums) {
        int n = nums.length;
        int i = 0, j = 0, k = n - 1;
        
        while(j <= k) {
            if(nums[j] == 2) {
                swap(nums, j, k);
                k--;
            } else if(nums[j] == 1) {
                j++;
            } else {
                swap(nums, i, j);
                j++;
                i++;
            }
        }
    }

    void swap(int[] nums, int i, int j) {
        int temp = nums[i];
        nums[i] = nums[j];
        nums[j] = temp;
    }
}
