class Solution {
    public int longestPalindrome(String[] words) {
        int count = 0;
        int twice = 0;
        boolean centre = false;
        Map<String, Integer> map = new HashMap<>();

        for(String s : words) {
            map.put(s, map.getOrDefault(s, 0) + 1);
        }

        for(String s : new HashSet<>(map.keySet())) {
            int val = map.getOrDefault(s, 0);
            if(val == 0)
                continue;

            if(s.charAt(0) == s.charAt(1)) {
                if(val % 2 == 1)
                    centre = true;
                count += 2 * (val - (val % 2));
            } else {
                String temp = String.valueOf(s.charAt(1)) + String.valueOf(s.charAt(0));
                count += 4 * Math.min(val, map.getOrDefault(temp, 0));
                map.put(temp, 0);
                map.put(s, 0);
            }
        }

        if(centre)
            count += 2;

        return count;
    }
}   
