class Solution {
    public int leastInterval(char[] tasks, int n) {
        int[] freq = new int[26];
        PriorityQueue<Integer> pq = new PriorityQueue<>(Collections.reverseOrder());
        int time = 0;
        for(char ch : tasks) freq[ch - 'A']++;
        for(int i : freq) if(i > 0) pq.offer(i);
        while(!pq.isEmpty()){
            ArrayList<Integer> temp = new ArrayList<>();
            for(int i = 0; i <= n; i++){
                if(!pq.isEmpty()){
                    int cnt = pq.poll();
                    cnt--;
                    temp.add(cnt);
                }
            }

            for(int f : temp) if(f > 0) pq.offer(f);
            if(pq.isEmpty()) time += temp.size();
            else time += n + 1;
        }

        return time;
    }
}
