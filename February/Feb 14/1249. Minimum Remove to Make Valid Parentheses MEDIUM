// approach 1
class Solution {
    public String minRemoveToMakeValid(String s) {
        StringBuilder str = new StringBuilder(s);
        int n = s.length();
        Stack<Integer> stk = new Stack<>();
        for(int i=0; i<n; i++){
            if(s.charAt(i) == '(') stk.push(i);
            else if(s.charAt(i) == ')' && (stk.isEmpty() || s.charAt(stk.peek()) == ')')) stk.push(i);
            else if(!stk.isEmpty() && s.charAt(i) == ')') stk.pop();
        }

        while(!stk.isEmpty()) str.deleteCharAt(stk.pop());

        return str.toString();
    }
}

// approach 2
class Solution {
    public String minRemoveToMakeValid(String s) {
        StringBuilder str = new StringBuilder();
        int n = s.length();
        int open = 0;
        for(int i=0; i<n; i++){
            if(s.charAt(i) == '(') {
                open++;
                str.append(s.charAt(i));
            } else if(s.charAt(i) == ')' && open > 0) {
                str.append(s.charAt(i));
                open--;
            } else if(s.charAt(i) != ')') str.append(s.charAt(i));
        }

        StringBuilder strnew = new StringBuilder();
        int close = 0;
        n = str.length();

        for(int i=n-1; i>=0; i--){
            if(str.charAt(i) == ')') {
                close++;
                strnew.append(str.charAt(i));
            } else if(str.charAt(i) == '(' && close > 0) {
                strnew.append(str.charAt(i));
                close--;
            } else if(str.charAt(i) != '(') strnew.append(str.charAt(i));
        }

        return strnew.reverse().toString();
    }
}

// approach 3
class Solution {
    public String minRemoveToMakeValid(String s) {
        StringBuilder str = new StringBuilder();
        int n = s.length();
        int open = 0;
        for(int i=0; i<n; i++){
            if(s.charAt(i) == '(') {
                open++;
                str.append(s.charAt(i));
            } else if(s.charAt(i) == ')' && open > 0) {
                str.append(s.charAt(i));
                open--;
            } else if(s.charAt(i) != ')') str.append(s.charAt(i));
        }

        if(open > 0){
            n = str.length() - 1;
            
            while(n >= 0 && open > 0){
                if(str.charAt(n) == '(') {
                    str.deleteCharAt(n);
                    open--;
                }
                n--;
            }
        }

        return str.toString();
    }
}
