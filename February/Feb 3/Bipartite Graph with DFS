class Solution {
    public boolean isBipartite(ArrayList<ArrayList<Integer>> adj) {
        int n = adj.size();
        int[] color = new int[n];
        Arrays.fill(color, -1);
        for(int i=0; i<n; i++){
            if(color[i] == -1){
                if(!dfs(adj, i, color, 1)) return false;
            }
        }
        return true;
    }
    
    public static boolean dfs(ArrayList<ArrayList<Integer>> adj, int curr, int[] color, int currcol){
        color[curr] = currcol;
        for(int v:adj.get(curr)){
            if(color[v] == currcol) return false;
            if(color[v]==-1) if(!dfs(adj, v, color, 1-currcol)) return false;
        }
        return true;
    }
}
