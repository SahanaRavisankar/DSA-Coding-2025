class MedianFinder {

    PriorityQueue<Integer> lmh;
    PriorityQueue<Integer> rmh;

    public MedianFinder() {
        lmh = new PriorityQueue<Integer>(Collections.reverseOrder()); // maxheap
        rmh = new PriorityQueue<Integer>(); // minheap
    }
    
    public void addNum(int num) {
        if(lmh.size() == 0 || num < lmh.peek()) lmh.offer(num);
        else rmh.offer(num);

        if(lmh.size() > rmh.size() + 1) rmh.offer(lmh.poll());
        else if(lmh.size() < rmh.size()) lmh.offer(rmh.poll());
    }
    
    public double findMedian() {
        double res = (double) lmh.peek();
        if(lmh.size() == rmh.size()) {
            res = (((double) rmh.peek()) + res) / 2;
        }
        return res;
    }
}

/**
 * Your MedianFinder object will be instantiated and called as such:
 * MedianFinder obj = new MedianFinder();
 * obj.addNum(num);
 * double param_2 = obj.findMedian();
 */
