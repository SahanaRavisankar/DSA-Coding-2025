class Solution {

    class Pair{
        char ch;
        int idx;
        Pair(char ch, int idx){
            this.ch = ch;
            this.idx = idx;
        }
    }

    public String clearStars(String s) {
        char[] arr = s.toCharArray();

        PriorityQueue<Pair> pq = new PriorityQueue<>(new Comparator<Pair>() {
            @Override
            public int compare(Pair a, Pair b) {
                if (a.ch == b.ch) {
                    return Integer.compare(b.idx, a.idx);
                }
                return Character.compare(a.ch, b.ch);
            }
        });

        for(int i = 0; i < s.length(); i++){
            if(s.charAt(i) == '*'){
                Pair p = pq.poll();
                arr[p.idx] = '*';
            } else {
                pq.offer(new Pair(s.charAt(i), i));
            }
        }

        StringBuilder str = new StringBuilder();
        for(char c : arr){
            if(c != '*') str.append(c);
        }

        return str.toString();
    }
}
