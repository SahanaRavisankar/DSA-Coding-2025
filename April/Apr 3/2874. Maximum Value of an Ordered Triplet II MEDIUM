// approach 1
class Solution {
    public long maximumTripletValue(int[] nums) {
        long res = 0;
        int n = nums.length;
        long[] leftmax = new long[n];
        long[] rightmax = new long[n];
        long lm = 0, rm = 0;

        for(int i = 0; i < n; i++) {
            leftmax[i] = lm;
            rightmax[n - 1 - i] = rm;
            lm = Math.max(nums[i], lm);
            rm = Math.max(nums[n - 1 - i], rm);
        }

        for(int i = 0; i < n; i++) {
            long num = nums[i];
            res = Math.max(res, (leftmax[i] - num) * rightmax[i]);
        }

        return res;
    }
}


// approach 2
class Solution {
    public long maximumTripletValue(int[] nums) {
        long res = 0;
        int n = nums.length;
        long maxi = 0, maxdiff = 0;

        for(int i = 0; i < n; i++) {
            long num = nums[i];
            res = Math.max(res, maxdiff * num);
            maxdiff = Math.max(maxdiff, maxi - num);
            maxi = Math.max(maxi, num);
        }

        return res;
    }
}
