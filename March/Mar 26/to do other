// approach 1
class Solution {
    public List<Integer> largestDivisibleSubset(int[] nums) {
        Arrays.sort(nums);
        List<Integer> temp = new ArrayList<>();
        List<Integer> res = new ArrayList<>();
        solve(nums, 0, -1, temp, res);
        return res;
    }

    void solve(int[] nums, int idx, int prev, List<Integer> temp, List<Integer> res){
        if(idx >= nums.length){
            if(res.size() < temp.size()) {
                res.clear();
                res.addAll(temp);
            }
            return;
        }
        
        if(prev == -1 || nums[idx] % nums[prev] == 0){
            temp.add(nums[idx]);
            solve(nums, idx + 1, idx, temp, res);
            temp.remove(temp.size() - 1);
        }
        solve(nums, idx + 1, prev, temp, res);
    }
}


// approach 2
