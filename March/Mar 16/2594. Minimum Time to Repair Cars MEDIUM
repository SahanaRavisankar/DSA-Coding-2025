class Solution {
    public long repairCars(int[] ranks, int cars) {
        long l = 1;
        int max = 0;
        for(int r : ranks) max = Math.max(max, r);
        long r = (long) max * cars * cars;
        long res = -1;

        while(l <= r){
            long mid = l + (r - l) / 2;
            if(possible(mid, ranks, cars)){
                r = mid - 1;
                res = mid;
            } else l = mid + 1;
        }

        return res;
    }

    boolean possible(long mid, int[] ranks, int cars){
        long carfix = 0;
        for(int i : ranks){
            carfix += (long) Math.sqrt((double) mid / i);
            if(carfix >= cars) return true;
        }
        return carfix >= cars;
    }
}
