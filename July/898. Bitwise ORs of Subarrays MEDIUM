// approach 1
class Solution {
    public int subarrayBitwiseORs(int[] arr) {
        Set<Integer> set = new HashSet<>();
        int n = arr.length;

        for (int i = 0; i < n; i++) {
            for (int j = i; j < n; j++) {
                int or = 0;
                for (int k = i; k <= j; k++) {
                    or |= arr[k];
                    set.add(or);
                }
            }
        }

        return set.size();
    }
}


// approach 2
class Solution {
    public int subarrayBitwiseORs(int[] arr) {
        Set<Integer> set = new HashSet<>();
        Set<Integer> prev = new HashSet<>();
        int n = arr.length;

        for (int i = 0; i < n; i++) {
            Set<Integer> temp = new HashSet<>();
            for (int j : prev) {
                temp.add(j | arr[i]);
                set.add(j | arr[i]);
            }
            temp.add(arr[i]);
            set.add(arr[i]);
            prev = new HashSet<>(temp);
        }

        return set.size();
    }
}
