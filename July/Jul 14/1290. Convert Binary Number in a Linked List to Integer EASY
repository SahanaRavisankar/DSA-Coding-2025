// approach 1 using strings
class Solution {
    public int getDecimalValue(ListNode head) {
        StringBuilder str = new StringBuilder();
        while(head != null){
            str.append(head.val);
            head = head.next;
        }

        return toInteger(str.reverse().toString());
    }

    int toInteger(String s) {
        int num = 0;
        for(int i = 0; i < s.length(); i++) {
            num += Math.pow(2, i) * (s.charAt(i) - '0');
        }

        return num;
    }
}


// approach 2 using reverse
class Solution {
    public int getDecimalValue(ListNode head) {
        head = reverse(head);
        int num = 0;
        int i = 0;
        while(head != null){
            num += Math.pow(2, i) * (head.val);
            i++;
            head = head.next;
        }

        return num;
    }

    ListNode reverse(ListNode head) {
        if(head == null || head.next == null)
            return head;
        ListNode list = reverse(head.next);
        head.next.next = head;
        head.next = null;
        return list;
    }
}
