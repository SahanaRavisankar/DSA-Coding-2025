class Solution {
    public long maxSubarrays(int n, int[][] conflictingPairs) {
        long valid = 0;
        List<Integer>[] conpts = new ArrayList[n + 1];
        for (int i = 0; i < n + 1; i++)
            conpts[i] = new ArrayList<Integer>();

        for (int[] i : conflictingPairs) {
            int max = Math.max(i[0], i[1]);
            int min = Math.min(i[0], i[1]);
            conpts[max].add(min);
        }

        long[] extra = new long[n + 1];
        long maxget = 0;
        int maxcon = 0, nxtmaxcon = 0;

        for (int end = 1; end <= n; end++) {
            for (int i : conpts[end]) {
                if (i >= maxcon) {
                    nxtmaxcon = maxcon;
                    maxcon = i;
                } else if (i > nxtmaxcon) {
                    nxtmaxcon = i;
                }
            }

            valid += end - maxcon;
            extra[maxcon] += maxcon - nxtmaxcon;
            maxget = Math.max(maxget, extra[maxcon]);
        }

        return valid + maxget;
    }
}
