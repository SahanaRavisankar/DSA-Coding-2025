class Solution {
    public int maximumLength(int[] nums) {
        int even = 0, odd = 0;
        for (int n : nums) {
            if (n % 2 == 0)
                even++;
            else
                odd++;
        }

        int l1 = solve(0, 0, nums, nums.length);
        int l2 = solve(1, 0, nums, nums.length);

        int l = Math.max(l1, l2);
        int eo = Math.max(even, odd);

        return Math.max(l, eo);
    }

    int solve(int parity, int idx, int[] nums, int n) {
        if(idx >= n)
            return 0;
        if(nums[idx] % 2 == parity)
            return 1 + solve(1 - parity, idx + 1, nums, n);
        return solve(parity, idx + 1, nums, n);
    }
}