// approach 1
class Solution {
    public int singleNumber(int[] nums) {
        int n = nums.length;
        if(n == 1)
            return nums[0];

        Arrays.sort(nums);
        for(int i = 0; i < n - 1; i += 2) {
            if(nums[i] != nums[i + 1])
                return nums[i];
        }
        
        return nums[n - 1];
    }
}

// approach 2
class Solution {
    public int singleNumber(int[] nums) {
        Set<Integer> set = new HashSet<>();
        for (int i : nums) {
            if(set.contains(i))
                set.remove(i);
            else
                set.add(i);
        }
        
        for(int i : set)
            return i;

        return -1;
    }
}


// approach 3
class Solution {
    public int singleNumber(int[] nums) {
        int xor = 0;

        for (int i : nums)
            xor ^= i;
        
        return xor;
    }
}
