class Solution {
    static int spanningTree(int v, int e, List<List<int[]>> adj) {
        PriorityQueue<int[]> pq = new PriorityQueue<>(Comparator.comparingInt(a -> a[0]));
        boolean[] vis = new boolean[v];

        pq.offer(new int[]{0, 0});
        int sum = 0;
        
        while(!pq.isEmpty()) {
            int w = pq.peek()[0];
            int u = pq.poll()[1];
            if(vis[u])
                continue;
                
            sum += w;
            vis[u] = true;
            
            for(int[] list : adj.get(u)){
                if(!vis[list[0]]){
                    pq.offer(new int[]{list[1], list[0]});
                }
            }
        }
        
        return sum;
    }
}