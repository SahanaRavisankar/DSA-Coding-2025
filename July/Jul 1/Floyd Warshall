class Solution {
    public void floydWarshall(int[][] dist) {
        int n = dist.length;
        for (int i = 0; i < n; i++) {
            for (int j = 0; j < n; j++) {
                if (dist[i][j] == -1) {
                    dist[i][j] = 100000000;
                }
            }
        }
        
        for (int count = 0; count < n; count++) {
            for (int i = 0; i < n; i++) {
                for (int j = 0; j < n; j++) {
                    dist[i][j] = Math.min(dist[i][j], dist[i][count] + dist[count][j]);
                }
            }
        }
        
        for (int i = 0; i < n; i++) {
            for (int j = 0; j < n; j++) {
                if (dist[i][j] == 100000000) {
                    dist[i][j] = -1;
                }
            }
        }
        
        // for (int i = 0; i < n; i++)
        //     if (grid[i][i] != 0)
        //         System.out.println("Negative cycle");
    }
}