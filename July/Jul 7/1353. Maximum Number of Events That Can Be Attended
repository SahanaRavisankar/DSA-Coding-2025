class Solution {
    public int maxEvents(int[][] events) {
        int n = events.length;
        int i = 0;
        int cnt = 0;
        Arrays.sort(events, (a, b) -> Integer.compare(a[0], b[0]));
        int day = events[0][0];
        PriorityQueue<Integer> pq = new PriorityQueue<>();

        while(i < n || !pq.isEmpty()) {
            if(pq.isEmpty())
                day = events[i][0];

            while(i < n && events[i][0] == day) {
                pq.offer(events[i][1]);
                i++;
            }

            if(!pq.isEmpty()) {
                pq.poll();
                cnt++;
            }

            day++;

            while(!pq.isEmpty() && pq.peek() < day)
                pq.poll();
        }

        return cnt;
    }
}