class Solution {
    public int xorAllNums(int[] nums1, int[] nums2) {
        Map<Integer, Integer> map = new HashMap<>();
        int n1 = nums1.length;
        int n2 = nums2.length;
        for(int i:nums1){
            map.put(i, map.getOrDefault(i, 0)+n2);
        }
        for(int i:nums2){
            map.put(i, map.getOrDefault(i, 0)+n1);
        }
        int res = 0;
        for(int i:map.keySet()){
            if(map.get(i)%2 != 0) res ^= i;
        }
        return res;
    }
}


class Solution {
    public int xorAllNums(int[] nums1, int[] nums2) {
        int n1 = nums1.length;
        int n2 = nums2.length;

        int res = 0;

        if (n1 % 2 != 0) {
            for (int i : nums2)
                res ^= i;
        }

        if (n2 % 2 != 0) {
            for (int i : nums1)
                res ^= i;
        }

        return res;
        

    }
}
