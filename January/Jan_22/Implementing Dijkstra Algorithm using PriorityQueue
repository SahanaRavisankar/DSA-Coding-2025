/*
class iPair {
    int first, second;

    iPair(int first, int second) {
        this.first = first;
        this.second = second;
    }
}
*/

// User function Template for Java
class Solution {
    ArrayList<Integer> dijkstra(ArrayList<ArrayList<iPair>> adj, int src) {
        PriorityQueue<int[]> pq = new PriorityQueue<>(Comparator.comparingInt(a -> a[0]));
        int v = adj.size();
        int[] res = new int[v];
        Arrays.fill(res, Integer.MAX_VALUE);
        res[src] = 0;
        pq.offer(new int[]{0, src});
        
        while(!pq.isEmpty()){
            int[] curr = pq.poll();
            int d = curr[0];
            int node = curr[1];
            for(iPair vec:adj.get(node)){
                int adjn = vec.first;
                int wt = vec.second;
                if(d + wt < res[adjn]) {
                    res[adjn] = d + wt;
                    pq.offer(new int[]{d + wt, adjn});
                }
            }
        }
        
        ArrayList<Integer> result = new ArrayList<>();
        for(int i:res) result.add(i);
        return result;
    }
}
