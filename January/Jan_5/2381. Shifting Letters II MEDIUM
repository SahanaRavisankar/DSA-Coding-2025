// approach 1
class Solution {
    public String shiftingLetters(String s, int[][] shifts) {
        char[] ch = s.toCharArray();
        for(int[] arr : shifts) {
            int st = arr[0];
            int end = arr[1];
            int shf = arr[2] == 1 ? 1 : -1;
            for(int i = st; i <= end; i++) {
                ch[i] = (char)((((ch[i] - 'a' + shf) % 26 + 26) % 26) + 97);
            }
        }
        return new String(ch);
    }
}


// approach 2
class Solution {
    public String shiftingLetters(String s, int[][] shifts) {
        char[] ch = s.toCharArray();
        int n = s.length();
        int[] diff = new int[n];

        for(int[] arr : shifts) {
            int shf = arr[2] == 1 ? 1 : -1;
            diff[arr[0]] += shf;
            if(arr[1] + 1 < n)
                diff[arr[1] + 1] -= shf;
        }

        for(int i = 1; i < n; i++) {
            diff[i] += diff[i - 1];
        }

        for(int i = 0; i < n; i++) {
            ch[i] = (char) ((((ch[i] - 'a' + diff[i]) % 26) + 26) % 26 + 97);
        }

        return new String(ch);
    }
}
