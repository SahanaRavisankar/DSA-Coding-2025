class Solution {
    public int minimumTimeToInitialState(String s, int k) {
        int[] lps = lpsKMP(s);
        int n = s.length();
        int len = lps[n-1];
        while((n-len) % k != 0) {
            if(len!=0) len = lps[len-1];
            else break;
        }
        if((n-len) % k == 0) return (n-len) / k;
        else if(len == 0) return n/k + 1;
        return (n-len) / k;
    }

    int[] lpsKMP(String s){
        int n = s.length();
        int[] lps = new int[n];
        lps[0] = 0;
        int i = 1;
        int len = 0;
        while(i<n){
            if(s.charAt(i) == s.charAt(len)){
                len++;
                lps[i] = len;
                i++;
            } else {
                if(len != 0) len = lps[len-1];
                else {
                    lps[i] = 0;
                    i++;
                }
            }
        }
        return lps;
    } 
}
