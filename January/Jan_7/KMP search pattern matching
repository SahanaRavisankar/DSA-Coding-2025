class Solution {
    
    int[] compute(int[] lps, String pat, String txt){
        int len = 0;
        int m = pat.length();
        int i=1;
        lps[0] = 0;
        while(i<m){
            if(pat.charAt(i) == pat.charAt(len)){
                len++;
                lps[i] = len;
                i++;
            } else{
                if(len != 0) len = lps[len-1];
                else{
                    lps[i] = 0;
                    i++;
                }
            }
        }
        
        return lps;
    }

    ArrayList<Integer> search(String pat, String txt) {
        ArrayList<Integer> res = new ArrayList<>();
        int m = pat.length();
        int n = txt.length();
        int[] lps = new int[m];
        lps = compute(lps, pat, txt);
        
        int i=0;
        int j=0;
        
        while(i<n){
            if(j<m && txt.charAt(i) == pat.charAt(j)){
                i++;
                j++;
            }
            
            if(j == m){
                res.add(i-j);
                j = lps[j-1];
            } else if(i<n && (j==0 || pat.charAt(j) != txt.charAt(i))) {
                if(j != 0) j = lps[j-1];
                else i++;
            }
        }
        
        return res;
    }
}
