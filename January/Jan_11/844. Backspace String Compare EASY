class Solution {
    public boolean backspaceCompare(String s, String t) {
        int m = s.length() - 1;
        int n = t.length() - 1;
        
        StringBuilder ss = new StringBuilder();
        StringBuilder st = new StringBuilder();
        for(int i=0; i<=m; i++){
            if(s.charAt(i) == '#' && ss.length()>0) ss.deleteCharAt(ss.length()-1);
            else if(s.charAt(i) != '#') ss.append(s.charAt(i));
        }
        
        for(int i=0; i<=n; i++){
            if(t.charAt(i) == '#' && st.length()>0) st.deleteCharAt(st.length()-1);
            else if(t.charAt(i) != '#') st.append(t.charAt(i));
        }
        
        return ss.toString().equals(st.toString());
    }
}


class Solution {
    public boolean backspaceCompare(String s, String t) {
        int i = s.length() - 1;
        int j = t.length() - 1;
        int skips = 0, skipt = 0;
        while (i >= 0 || j >= 0) {
            while (i >= 0) {
                if (s.charAt(i) == '#') {
                    skips++;
                    i--;
                } else if (skips > 0) {
                    skips--;
                    i--;
                } else
                    break;
            }

            while (j >= 0) {
                if (t.charAt(j) == '#') {
                    skipt++;
                    j--;
                } else if (skipt > 0) {
                    skipt--;
                    j--;
                } else
                    break;
            }

            char first = i < 0 ? '$' : s.charAt(i);
            char second = j < 0 ? '$' : t.charAt(j);
            if (first != second)
                return false;
            i--;
            j--;
        }

        return true;
    }
}
